plugins {
	id('fabric-loom') version('1.3-SNAPSHOT')
	id('maven-publish')
}

version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://maven.shedaniel.me/" }
}

loom {
	accessWidenerPath.set(file('src/main/resources/umu_config.accesswidener'))
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation"net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi "me.shedaniel.cloth:cloth-config-fabric:13.0.121"
}

processResources {
	inputs.property "version", project.version
	filteringCharset "UTF-8"

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
	withSourcesJar()
}

jar {
	from("LICENSE.md") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		gpr(MavenPublication) {
			artifactId = "umu-config"
			from components.java
		}
	}

	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/zemelua/UMU-Config")
			credentials {
				username = System.getenv("USERNAME")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
}
